# COMMON SETTINGS FOR AIRFLOW SERVICES
x-airflow-common: &airflow-common
  networks:
    - my-bridge-network
  env_file:
    - .env
  environment:
    PYTHONPATH: /opt/airflow:/opt/airflow/src
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
    AIRFLOW__CORE__TEST_CONNECTION: 'Enabled'
    AIRFLOW__CORE__ALLOW_PICKLE_DESERIALIZE: 'true'
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__ALLOWED_DESERIALIZATION_CLASSES: airflow.* astro.*
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: >
      postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: >
      postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
    AIRFLOW_CONN_PROJECT_DB: >
      postgresql+psycopg2://${PGUSER}:${PGPASSWORD}@project-db:${PGPORT}/${PGDATABASE}
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
  user: "${AIRFLOW_UID:-50000}:0"
#  user: "0:0"
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./dags:/opt/airflow/dags:rw
    - ./logs:/opt/airflow/logs:rw
    - ./src:/opt/airflow/src:rw
    - /etc/localtime:/etc/localtime:ro

services:

  airflow-postgres:
    <<: *airflow-common
    image: postgres:14
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    volumes:
      - airflow-db-volume:/var/lib/postgresql/data
      - /var/run/docker.sock:/var/run/docker.sock

  airflow-init:
    <<: *airflow-common
    image: apache/airflow:latest-python3.11
    depends_on:
      - airflow-postgres
    entrypoint: >
      /bin/bash -c
      "airflow db migrate && airflow users create \
      --username airflow \
      --password airflow \
      --firstname admin \
      --lastname admin \
      --role Admin \
      --email admin@example.com"
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    image: apache/airflow:latest-python3.11
    command: webserver
    depends_on:
      - airflow-postgres
      - airflow-init
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
#    user: "0:0"

  airflow-scheduler:
    <<: *airflow-common
    image: apache/airflow:latest-python3.11
    command: scheduler
    depends_on:
      - airflow-postgres
      - airflow-init
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

secrets:
  PGUSER:
    file: ./secrets/pguser.txt
  PGPASSWORD:
    file: ./secrets/pgpassword.txt
  PGPORT:
    file: ./secrets/pgport.txt
  PGDATABASE:
    file: ./secrets/pgdatabase.txt
  AIRFLOW__WEBSERVER__SECRET_KEY:
    file: ./secrets/airflow_secret_key.txt

volumes:
  airflow-db-volume:
    driver: local

networks:
  my-bridge-network:
    driver: bridge
    external: true